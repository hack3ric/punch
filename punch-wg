#!/bin/sh
set -e

script_dir=$(dirname "$(readlink -f "$0")")

if [ $# -lt 5 ]; then
  >&2 echo "usage: punch-wg <interface> <kvsh_dest> <self_entry> <peer_entry> <peer_public_key>"
  exit 1
fi

interface="$1"
kvsh_dest="$2"
self_entry="$3"
peer_entry="$4"
peer_public_key="$5"

log() {
  if [ -f /etc/openwrt_release ]; then
    logger -t punch-wg "$@"
  fi
  >&2 echo "$@"
}

if ! which python3 >/dev/null; then
  log "python3 not installed, not running"
  exit 1
fi

listen_port="$(wg show "$interface" listen-port)"
last_handshake="$(wg show "$interface" latest-handshakes | grep "$peer_public_key" | awk '{print $2}')"
if [ -z "$listen_port" ] || [ -z "$last_handshake" ]; then
  log WireGuard config incomplete, not running
  exit 1
fi

idle_seconds="$(($(date +%s) - last_handshake))"
[ "$idle_seconds" -lt 150 ] && exit 0

wg set "$interface" listen-port 0
set +e
self_endpoint="$("$script_dir"/stun-client --port "$listen_port")"
stun_client_result="$?"
wg set "$interface" listen-port "$listen_port"
set -e
[ "$stun_client_result" -ne 0 ] && exit "$stun_client_result"

# shellcheck disable=SC2029
[ ! -z "$self_endpoint" ] && ssh "$kvsh_dest" write "$self_entry" "$self_endpoint"

# shellcheck disable=SC2029
peer_endpoint="$(ssh "$kvsh_dest" read "$peer_entry")"
[ ! -z "$peer_endpoint" ] && wg set "$interface" peer "$peer_public_key" endpoint "$peer_endpoint"

log "WireGuard NAT hole punching synchronized: $self_entry::$self_endpoint <=> $peer_entry::$peer_endpoint"
